<?xml version="1.0" encoding="UTF-8"?>
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.chiknrice.org/jen8583"
        xmlns:tns="http://www.chiknrice.org/jen8583"
        elementFormDefault="qualified" version="${project.version}">

    <!--

        Copyright (c) 2014 Ian Bondoc

        This file is part of Jen8583

        Jen8583 is free software: you can redistribute it and/or modify it under the terms of the
        GNU General Public License as published by the Free Software Foundation, either version 3
        of the License, or(at your option) any later version.

        Jen8583 is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
        without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
        See the GNU General Public License for more details.

        You should have received a copy of the GNU General Public License along with this program.
        If not, see <http://www.gnu.org/licenses/>.

    -->

    <element name="iso">
        <complexType>
            <sequence>
                <!-- The mandatory defaults section which defines defaults related to field definitions.
                 Defaults are set to define the configuration convention (e.g. no length-encoding specified
                 defaults to  BCD) -->
                <element name="defaults" minOccurs="1">
                    <complexType>
                        <sequence>
                            <element name="var" minOccurs="1">
                                <complexType>
                                    <!-- Default encoding of length prefixes of variable length fields -->
                                    <attribute name="length-encoding" type="tns:numeric-encoding" use="required"/>
                                </complexType>
                            </element>
                            <element name="tlv" minOccurs="1">
                                <complexType>
                                    <attribute name="tag-encoding" type="tns:numeric-encoding" use="required"/>
                                    <attribute name="length-encoding" type="tns:numeric-encoding" use="required"/>
                                </complexType>
                            </element>
                            <element name="alpha" minOccurs="1">
                                <complexType>
                                    <!-- Specifies if text is left or right justified when encoding fixed length fields.
                                    Valid values are "LEFT" or "RIGHT".  The padding is a space character -->
                                    <attribute name="justified" type="tns:justified-type" use="required"/>
                                    <!-- Trim rule of fixed length fields which defines if white spaces are trimmed by
                                    default during decoding -->
                                    <attribute name="trim" type="boolean" use="required"/>
                                </complexType>
                            </element>
                            <element name="numeric" minOccurs="1">
                                <complexType>
                                    <!-- Default encoding for all numeric fields fixed/variable length -->
                                    <attribute name="encoding" type="tns:numeric-encoding" use="required"/>
                                </complexType>
                            </element>
                            <element name="date" minOccurs="1">
                                <complexType>
                                    <!-- Default encoding for date fields -->
                                    <attribute name="encoding" type="tns:date-encoding" use="required"/>
                                    <!-- Default timezone to use when encoding/parsing date types.  Values accepted are
                                     "SYSTEM" to specify the default timezone or a valid java.util.TimeZone id -->
                                    <attribute name="timezone" type="token" use="required"/>
                                </complexType>
                            </element>
                            <element name="ordinality" minOccurs="1">
                                <complexType>
                                    <!-- Ordinality means mandatory-nes of fields -->
                                    <attribute name="mandatory" type="boolean" use="required"/>
                                    <attribute name="fail-fast" type="boolean" use="required"/>
                                </complexType>
                            </element>
                        </sequence>
                    </complexType>
                </element>

                <!-- Optional masks defines masking of fields during logging.  It can be referred to from the config via
                its unique id -->
                <element name="masks" minOccurs="0">
                    <complexType>
                        <sequence>
                            <element name="mask" minOccurs="1" maxOccurs="unbounded">
                                <complexType>
                                    <attribute name="id" type="token" use="required"/>
                                    <!-- An implementation of org.chiknrice.iso.Mask -->
                                    <attribute name="class" type="token" use="required"/>
                                </complexType>
                            </element>
                        </sequence>
                    </complexType>
                </element>

                <!-- Optional ISO header  -->
                <element name="header" type="tns:fixed-fields" minOccurs="0"/>

                <!-- Encoding for MTI -->
                <element name="mti-encoding" minOccurs="1">
                    <complexType>
                        <attribute name="type" type="tns:mti-encoding" use="required"/>
                    </complexType>
                </element>

                <!-- Encoding of the ISO message bitmap.  Bitmaps of sub fields can be defined in bitmap-fields -->
                <element name="msg-bitmap" minOccurs="1">
                    <complexType>
                        <attribute name="type" type="tns:bitmap-type" use="required"/>
                    </complexType>
                </element>

                <!-- Message type definitions -->
                <element name="message" type="tns:message" minOccurs="1" maxOccurs="unbounded"/>

                <!-- Message extension definitions.  Message extensions serves to minimize redundant message definitions -->
                <element name="message-ext" type="tns:message-extension" minOccurs="0" maxOccurs="unbounded"/>
            </sequence>
        </complexType>
    </element>

    <!-- Defines a variable length composite field. As var-fields are flexible, it can only be used under a flexible
    composite component so an optional attribute is needed. -->
    <complexType name="composite-var-in-composite-var">
        <complexContent>
            <extension base="tns:composite-bitmap">
                <attributeGroup ref="tns:variable-length"/>
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines composite components with optional bitmap.  This layer is shared by composite-var-in-composite-var and
    composite-var-in-composite-tlv.  It is refactored since tlv defines its own way of encoding/decoding length-->
    <complexType abstract="true" name="composite-bitmap">
        <complexContent>
            <extension base="tns:message-data-elements">
                <attribute name="bitmap-type" type="tns:bitmap-type" use="optional" default="HEX"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines composite components for use in a TLV context -->
    <complexType name="composite-var-in-composite-tlv">
        <complexContent>
            <extension base="tns:composite-bitmap">
                <attributeGroup ref="tns:tlv-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines the ISO message structure, the root composite component defines bitmap type globally so no attribute
    needed here -->
    <complexType name="message">
        <complexContent>
            <extension base="tns:message-data-elements">
                <attribute name="mti" type="int" use="required"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines the ISO message extension structure -->
    <complexType name="message-extension">
        <sequence>
            <!-- Setting fields of a variable length composite field would augment the inherited set of fields but
            setting fields of a fixed length would replace the whole composite field -->
            <element name="set" type="tns:message-data-elements" minOccurs="0"/>
            <element name="remove" type="tns:excludes" minOccurs="0"/>
        </sequence>
        <attribute name="mti" type="int" use="required"/>
        <attribute name="extends" type="int" use="required"/>
    </complexType>

    <!-- Defines the remove section of a message extension, this only list indexes and composite indexes -->
    <complexType name="excludes">
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="composite">
                <complexType>
                    <complexContent>
                        <extension base="tns:excludes">
                            <attribute name="index" type="int" use="required"/>
                        </extension>
                    </complexContent>
                </complexType>
            </element>
            <element name="field">
                <complexType>
                    <attribute name="index" type="int" use="required"/>
                </complexType>
            </element>
        </choice>
    </complexType>

    <!-- Defines the structure of iso message data elements.  Root fields is the structure for message level fields as
    well as the "set" element for message extensions.  It is also the base type for variable length composite fields and
    exclude.  Sub field types mostly have "-var" counterparts except for "date" which is always a fixed length field.
    All fields under a variable composite field can be non-mandatory which requires indexes to be specified -->
    <complexType name="message-data-elements">
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="alpha" type="tns:alpha-fixed-optional"/>
            <element name="alpha-var" type="tns:alpha-var"/>
            <element name="numeric" type="tns:numeric-fixed-optional"/>
            <element name="numeric-var" type="tns:numeric-var"/>
            <element name="date" type="tns:date-optional"/>
            <element name="binary" type="tns:binary-fixed-optional"/>
            <element name="binary-var" type="tns:binary-var"/>
            <element name="custom" type="tns:custom-fixed-optional"/>
            <element name="custom-var" type="tns:custom-var"/>
            <element name="composite" type="tns:fixed-fields-optional"/>
            <element name="composite-var" type="tns:composite-var-in-composite-var"/>
            <element name="composite-tlv" type="tns:composite-tlv-in-composite-var"/>
        </choice>
    </complexType>

    <!-- Defines a fixed field that is used under a variable composite field since all fields under variable composite
    are optional -->
    <complexType name="fixed-fields-optional">
        <complexContent>
            <extension base="tns:fixed-fields">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines the structure for composite field which has fixed length.  The sub fields doesn't include their "-var"
    counterparts and all sub fields are mandatory so indexes are not needed to be specified.  The indexes of all sub fields
     are sequential and starts with 1 -->
    <complexType name="fixed-fields">
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="alpha" type="tns:alpha-fixed"/>
            <element name="numeric" type="tns:numeric-fixed"/>
            <element name="date" type="tns:date"/>
            <element name="binary" type="tns:binary-fixed"/>
            <element name="custom" type="tns:custom-fixed"/>
            <element name="composite" type="tns:fixed-fields"/>
        </choice>
    </complexType>

    <!-- All TLV are having the same tag and length encoding however tag byte count and length prefix byte count are
    determined by the rules of BER or others so VarCodec cannot be applied to the codecs of the elements.  Also, all
    elements are var-length length related attributes -->
    <complexType name="composite-tlv">
        <choice minOccurs="1" maxOccurs="unbounded">
            <element name="alpha" type="tns:alpha-tlv-value"/>
            <element name="numeric" type="tns:numeric-tlv-value"/>
            <element name="binary" type="tns:binary-tlv-value"/>
            <element name="composite" type="tns:composite-var-in-composite-tlv"/>
            <element name="custom" type="tns:custom-tlv-value"/>
            <element name="composite-tlv" type="tns:composite-tlv"/>
        </choice>
        <attribute name="tlv-tag-encoding" type="tns:numeric-encoding" use="optional" default="BINARY"/>
        <attribute name="tlv-length-encoding" type="tns:numeric-encoding" use="optional" default="BINARY"/>
    </complexType>

    <!-- Provided for composite-tlv under a composite-var context -->
    <complexType name="composite-tlv-in-composite-var">
        <complexContent>
            <extension base="tns:composite-tlv">
                <attributeGroup ref="tns:optional-member"/>
                <attributeGroup ref="tns:variable-length"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines text fields (which are not really limited to alpha/numeric).  Characters under ISO 8859-1 are supported.
     This type is abstract and is the base for all alpha fields -->
    <complexType name="alpha" abstract="true">
        <!-- Defines trim rule when decoding a string.  Even variable length strings can have padding which would be
        trimmed out if this is set to true -->
        <attribute name="trim" type="boolean" use="optional" default="true"/>
    </complexType>

    <!-- Defines fixed length text fields -->
    <complexType name="alpha-fixed">
        <complexContent>
            <extension base="tns:alpha">
                <!-- Fixed length -->
                <attribute name="length" type="int" use="required"/>
                <!-- Allowed values are "LEFT" or "RIGHT" -->
                <attribute name="justified" type="tns:justified-type" use="optional" default="LEFT"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines fixed length text fields which are used under variable length composite fields -->
    <complexType name="alpha-fixed-optional">
        <complexContent>
            <extension base="tns:alpha-fixed">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines tlv text values-->
    <complexType name="alpha-tlv-value">
        <complexContent>
            <extension base="tns:alpha">
                <attributeGroup ref="tns:tlv-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines variable length text fields -->
    <complexType name="alpha-var">
        <complexContent>
            <extension base="tns:alpha">
                <attributeGroup ref="tns:variable-length"/>
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <complexType name="numeric" abstract="true">
        <attribute name="encoding" type="tns:numeric-encoding" use="optional" default="CHAR"/>
    </complexType>

    <!-- Defines tlv text values-->
    <complexType name="numeric-tlv-value">
        <complexContent>
            <extension base="tns:numeric">
                <attributeGroup ref="tns:tlv-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines fixed length numeric fields -->
    <complexType name="numeric-fixed">
        <complexContent>
            <extension base="tns:numeric">
                <attribute name="length" type="int" use="required"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines fixed numeric fields which are used under variable length composite fields -->
    <complexType name="numeric-fixed-optional">
        <complexContent>
            <extension base="tns:numeric-fixed">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines variable length numeric fields -->
    <complexType name="numeric-var">
        <complexContent>
            <extension base="tns:numeric">
                <attributeGroup ref="tns:variable-length"/>
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines date fields.  Date fields are always fixed length -->
    <complexType name="date">
        <attribute name="format" type="token" use="required"/>
        <attribute name="timezone" type="token" use="optional" default="UTC"/>
        <attribute name="encoding" type="tns:date-encoding" use="optional" default="BCD"/>
    </complexType>

    <!-- Defines date fields used under variable length composite fields -->
    <complexType name="date-optional">
        <complexContent>
            <extension base="tns:date">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines fixed length binary fields -->
    <complexType name="binary-fixed">
        <attribute name="length" type="int" use="required"/>
    </complexType>

    <!-- Defines fixed length binary fields used under variable length composite fields -->
    <complexType name="binary-fixed-optional">
        <complexContent>
            <extension base="tns:binary-fixed">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines variable length binary fields-->
    <complexType name="binary-var">
        <attributeGroup ref="tns:variable-length"/>
        <attributeGroup ref="tns:optional-member"/>
    </complexType>

    <!-- Defines binary tlv values-->
    <complexType name="binary-tlv-value">
        <attributeGroup ref="tns:tlv-member"/>
    </complexType>

    <!-- Defines fixed length custom fields which specifies its codec (implementation of CustomCodec) -->
    <complexType name="custom" abstract="true">
        <sequence>
            <element name="param" minOccurs="0" maxOccurs="unbounded">
                <complexType>
                    <attribute name="key" type="token" use="required"/>
                    <attribute name="value" type="token" use="required"/>
                </complexType>
            </element>
        </sequence>
        <attribute name="codec" type="token" use="required"/>
    </complexType>

    <!-- Defines fixed length custom fields used under fixed length composite fields -->
    <complexType name="custom-fixed">
        <complexContent>
            <extension base="tns:custom">
                <attribute name="length" type="int" use="required"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines fixed length custom fields used under variable length composite fields -->
    <complexType name="custom-fixed-optional">
        <complexContent>
            <extension base="tns:custom-fixed">
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines variable length custom fields -->
    <complexType name="custom-var">
        <complexContent>
            <extension base="tns:custom">
                <attributeGroup ref="tns:variable-length"/>
                <attributeGroup ref="tns:optional-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines custom tlv values -->
    <complexType name="custom-tlv-value">
        <complexContent>
            <extension base="tns:custom">
                <attributeGroup ref="tns:tlv-member"/>
            </extension>
        </complexContent>
    </complexType>

    <!-- Defines attributes common to all optional members (fields used under variable length composite fields) -->
    <attributeGroup name="optional-member">
        <attribute name="index" type="int" use="required"/>
        <attribute name="mandatory" type="boolean" use="optional" default="false"/>
    </attributeGroup>

    <!-- Defines attributes common to tlv members -->
    <attributeGroup name="tlv-member">
        <attribute name="tag" type="int" use="required"/>
        <attribute name="mandatory" type="boolean" use="optional" default="false"/>
    </attributeGroup>

    <!-- Defines attributes common to all variable length fields -->
    <attributeGroup name="variable-length">
        <!-- Length digits -->
        <attribute name="length-digits" type="int" use="required"/>
        <attribute name="length-encoding" type="tns:numeric-encoding" use="optional" default="BCD"/>
    </attributeGroup>

    <!-- Defines allowed encodings for numeric fields -->
    <simpleType name="numeric-encoding">
        <restriction base="token">
            <enumeration value="CHAR"/>
            <enumeration value="BINARY"/>
            <enumeration value="BCD"/>
        </restriction>
    </simpleType>

    <!-- Defines allowed encodings for date fields -->
    <simpleType name="date-encoding">
        <restriction base="token">
            <enumeration value="CHAR"/>
            <enumeration value="BCD"/>
        </restriction>
    </simpleType>

    <!-- Defines allowed encodings for mti -->
    <simpleType name="mti-encoding">
        <restriction base="token">
            <enumeration value="CHAR"/>
            <enumeration value="BCD"/>
        </restriction>
    </simpleType>

    <!-- Defines allowed types of bitmaps -->
    <simpleType name="bitmap-type">
        <restriction base="token">
            <enumeration value="BINARY"/>
            <enumeration value="HEX"/>
            <enumeration value="COMPRESSED"/>
        </restriction>
    </simpleType>

    <!-- Defines allowed types of "justified" attribute of fixed length fields -->
    <simpleType name="justified-type">
        <restriction base="token">
            <enumeration value="LEFT"/>
            <enumeration value="RIGHT"/>
        </restriction>
    </simpleType>
</schema>